<xml>
	<!-- A-Select AuthSP Server main Configuration -->
	<authspserver>
		<!--	The "keystore_password" is the password that is used for
				accessing the A-Select AuthSP Server keystore. An example value 
				is "changeit". -->
		<keystore_password>changeit</keystore_password>

		<!--	The "organization_friendly_name" is the friendly organization
				name. An example value is "A-Select AuthSP Server". -->
		<organization_friendly_name>A-Select AuthSP Server</organization_friendly_name>

		<!--	The "shared_secret" is a shared secret that is used for 
				restarting A-Select AuthSP Server. The A-Select AuthSP Server can be 
				restarted using a CGI request or the browser, for example: 
				https://localhost/authspserver/server?request=restart&shared_secret=changeit

				This configuration item is optional, if omitted the A-Select 
				AuthSP Server is not restartable.
				
				Note: The shared_secret must be changed. Do not keep the default value! -->
		<!-- <shared_secret>changeit</shared_secret> -->

		<!--	The "crypto" configuration contains the configuration items concerning all crypto. 

				NOTE: The A-Select distribution is shipped with the Cryptix provider 
				(cryptix.jce.provider.CryptixCrypto) that supports the 
				SHA1withRSA algorithm for signing, the DESede algorithm for encryption and
				the SHA1PRNG algorithm for random generation.
				
				A-Select has also been tested with the IBM JCE FIPS provider 
				(com.ibm.crypto.provider.IBMJCA) for more information see www.ibm.com. -->
		<crypto>

			<!--	The "signature_algorithm" is the signature used to sign and verify requests
					during A-Select communication.
					The "algorithm" is the actual algorithm that will be used, for 
					example "SHA1withRSA".
					The "provider" is the corresponding crypto provider "id". See the
					crypto provider documentation for more information on which algorithms
					are supported. An example would be "Cryptix".
					
					If no provider is configured, the default provider is used. Usually 
					SUN. However a valid algorithm must be configured. For more information
					see the Java crypto documentation. -->	
			<signature_algorithm provider="Cryptix" algorithm="SHA1withRSA"/>

			<!--	The Cryptographic Service Providers configuration -->
			<providers>

				<!--	A "provider" is a Cryptographic Service Provider (CSP) that implements 
						certain cryptograpic algorithms. These providers are used
						in combination with the "signature_algorithm", "encryption_algorithm" and 
						"random_generator_algorithm" configuration to perform the actual work.

						The "id" must be an unique provider name that can be 
						used in the "*_algorithm" configurations.
						
						The "class" is the provider class of the actual CSP.
						
						The "provider" configuration item is optional. 
						
						NOTE: When configuring a provider make sure the necessary jar files
						are installed in the appropriate directory. -->
						
				<!--	The Cryptix provider is shipped with the default A-Select distribution -->
				<provider id="Cryptix" class="cryptix.jce.provider.CryptixCrypto"/>
		
			</providers>
		</crypto>

		<!--	The A-Select system logger configuration. 
				The "id" value must contain the value "system". 
				The "target" refers to a corresponding target "id". -->
		<logging id="system" target='file'>

			<!--	The "level" is the log level that indicates the detail of 
					the A-Select logging.
					
					The following levels can be configured, each level includes
					the logging generated by the lower level, WARNING will log
					WARNING and SEVERE messages:
					- SEVERE:  SEVERE messages indicate problems with A-Select 
						   preventing A-Select from working properly.
					- WARNING: WARNING messages indicate a problem that does not affect
						   A-Select.
					- INFO:    INFO messages contain general A-Select information.
					- CONFIG:  CONFIG messages show information concering the configuration
					           of A-Select. This usually indicates when a default option has
					           been selected. 
					- FINE:    INFO messages contains more extensive logging
					- FINER:   FINER messages contain maximum logging, without stacktraces
					- FINEST:  FINEST messages maximum logging with stacktraces
					- ALL:     equal to FINEST	
					
					The "level" configuration item is optional, by defaul the level will be 
					set to CONFIG. -->
			<level>CONFIG</level>

			<!--	The target "id" identifies this target configuration and 
					must be an unique name that corresponds with the configured 
					"target" attribute of the logging tag. -->
			<target id='file'>

				<!--	The "max_file_size" indicates the maximum log file size 
						in bytes for one log file. An example is "524288" that 
						corresponds to a 512Kb log file.
						
						The "max_file_size" configuration item is optional, if 
						omitted the value will be set to "307200" that indicates
						a filesize of 300Kb. -->
				<max_file_size>524288</max_file_size>

				<!--	The "nr_of_files" indicates the number of files that 
						will be used when rotating the log files. If the log file 
						becomes larger than the configured "max_file_size" a new 
						file is created. This process will repeat the 
						configured until the number of files is reached.
						An example value is "4".
						
						The "nr_of_files" configuration item is optional, if 
						omitted the value will be set to "4". -->
				<nr_of_files>4</nr_of_files>
			
				<!--	The target "directory" is the directory where the 	
						logging files will be written. The system logging files are 
						written in a subdirectory "system".

						The "directory" configuration item is optional, if 
						omitted the directory will be the:
						"A-Select working directory"/log/system. -->
				<directory>[aselect_home]/log/authspserver</directory>

			</target>
		</logging>
	
		<!--	The A-Select authentication logger configuration.
				The "id" value must contain "authentication". 
				The "target" must refers to a corresponding target "id". -->
		<logging id="authentication" target="file">
			
			<target id='file'>

				<max_file_size>524288</max_file_size>

				<nr_of_files>4</nr_of_files>
				
				<directory>[aselect_home]/log/authspserver</directory>

			</target>

			<!--	To configure the authentication logger to log to a database,
					replace the target id="file" configuration with the
					following, don't forget to set the correct target in the "logging"
					configuration: -->
					
			<!-- <target id="database"> -->

				<!--	The "url" of the database. -->
				<!-- <url>jdbc:mysql://localhost/aselect</url> -->

				<!--	The JDBC driver that is used to communicate with the 
						database.
						NOTE: When configuring a JDBC driver make sure the necessary jar files
						are installed in the appropriate directory. -->
				<!-- <driver>com.mysql.jdbc.Driver</driver> -->

				<!--	The "user" is the user name that has sufficient 
						rights for accessing the database and table. 
						An example username is "aselect_user". -->
				<!-- <user>aselect_user</user> -->

				<!--	The "password" is the password for the above user name.
						An example password is "changeit". -->
				<!-- <password>changeit</password> -->

				<!--	The "table" is the actual database table used to store the logging.
						The table "name" is the name that corresponds with the 
						database table name, for example TBL_SERVER_AUTHLOGGING.
						-->
				<!-- <table name="TBL_SERVER_AUTHLOGGING"> -->

					<!--	The appropriate columns must be configured to allow A-Select
							to log information. The following logging can be logged in 
							columns and only in this sequence:
								- The A-Select Component name
								- The action
								- The A-Select user ID
								- The organization ID
								- The IP address of the user
								- The app_id were the user wants to authenticate 
								for
								- The message
								- The resultcode

							NOTE: The configured table names must correspond to the 
							      table names in the JDBC database.
					-->
					<!--
					<column name="ASELECTCOMPONENT"/>
					<column name="ACTION"/>
					<column name="USER"/>
					<column name="IP"/>
					<column name="ORGANIZATION"/>
					<column name="APPID"/>
					<column name="MESSAGE"/>
					<column name="RESULTCODE"/>
					-->
			<!--
				</table>
			</target>
			-->
		</logging>
	</authspserver>
			
	<!-- The Session Storage Manager.-->
	<storagemanager id="session">

		<!--	The "expire" configuration item indicates the expiration time in seconds. 
				An example value is "600" which indicates an expiration time of 10 minutes. 

				The "expire" configuration item is optional, if omitted the
				value will be set to "0" indicating information stored with this  
				storage manager does not expire. -->
		<expire>600</expire>

		<!--	The "interval" configuration item indicates the time in seconds that a storage 
				manager checks for expired information.
				
				The "interval" configuration item is optional, if omitted the
				value will be set to "60" indicating an interval of 1 minute. 
				-->
		<interval>10</interval>

		<!--	The "max" configuration item indicates the maximum of number of information
				items that may exist in this storage manager. 
				An example value is "1000". -->
		<max>1000</max>

		<!--	The "handler" configuration item of a Storage Manager is the type of storage 
				that will be used to store the sessions in. 
		
				The "class" is the class that contains the Storage Handler implemenation. 
				
				The current A-Select distribution contains two implementations:
				- org.aselect.system.storagemanager.handler.MemoryStorageHandler
				- org.aselect.system.storagemanager.handler.JDBCStorageHandler
			
				The "id" refers to the "storagehandler" configuration item containing
				the specific configuration. An example value is "memory". 
				
				An example handler configuration for usage of the JDBStorageHandler is:
				<handler class="org.aselect.system.storagemanager.handler.JDBCStorageHandler" id="jdbc"/> -->
		<handler class="org.aselect.system.storagemanager.handler.MemoryStorageHandler" id="memory"/>

		<!--	The "storagehandler" handles the communication to the actual storage medium. 
				The "id" of the storagehandler is the unique name used in combination
				with the "handler" configuration item to initialize a Storage Handler.
				
				An example value is "memory". 
				
				NOTE: The memory handler does not need any additional configuration.-->
		<storagehandler id="memory"/>

		<!--	If in the "handler" configuration the "class" is configured to
				"org.aselect.system.storagemanager.handler.JDBCStorageHandler" 
				the storagehandler requires additional configuration.
				
				The "id" of the storagehandler is the unique storagehandler name 
				within this storagemanager. 
				
				The "resourcegroup" is the group of resources that is to be used 
				to connect with the physical storage.

				An example value for "id" is "jdbc" and an example value for 
				"resourcegroup" is "jdbc_resources". -->
		<!-- <storagehandler id="jdbc" resourcegroup="jdbc_resources"> -->

			<!--	The "table" configuration item is the actual table used to store 
				and retrieve information.
					
				The "name" configuration item is the name of the table that 
				exists in the JDBC storage.
					
				An example "name" is "TBL_SERVER_SESSIONS". 
				
				NOTE: The following shows the required table structure in a MYSQL 
					database:
						CREATE TABLE TBL_SERVER_SESSIONS 
						( 
						  hash varchar(20),    
						  timestamp timestamp(14),    
						  s_key blob,    
						  s_value blob
						) PRIMARYKEY(hash); -->
			<!-- <table name="TBL_SERVER_SESSIONS"> -->
				
				<!--	The "hash" configuration item indicates the column in 
						the database table that is used for storing the 
						identification hash of the item.

						An example "hash" column name is "hash". -->
				<!-- <hash>hash</hash> -->
				
				<!--	The "timestamp" configuration item indicates the column 
						in the database table that is used to store the 
						timestamp of the item. This timestamp is used 
						to validate the expiration time.

						An example "timestamp" column name is "timestamp". -->
				<!-- <timestamp>timestamp</timestamp> -->

				<!--	The "key" configuration item indicates the column 
						in the database table that is used for storing the 
						key of the item. 
						
						An example "key" column name is "s_key". -->
				<!-- <key>s_key</key> -->
				
				<!--	The "value" configuration item indicates the column 
						in the database table that is used for storing the 
						actual item.

						An example "value" column name is "s_value". -->
				<!-- <value>s_value</value> -->

			<!-- </table> -->
		<!-- </storagehandler> -->
	</storagemanager>

	<!--	A-Select Null AuthSP Configuration -->
	
	<!--	The AuthSP "id" is a unique ID for the AuthSP. This ID is configured
			in the web.xml of the AuthSP Server using the "config_id" parameter. The
			AuthSP is added to the AuthSP server web.xml during installation. 
			The default configuration ID is "nullauthsp".
			
			NOTE: The Null AuthSP is only used for testing purposes. It should be removed
			from production environments-->
	<authsp id='nullauthsp'>
		
		<!--	The "authentication_mode" is the mode that will be used for the 
				Null AuthSP. If configured as "granted", all users will be 
				granted by the Null AuthSP. If configured as "denied", all users 
				that use the Null AuthSP will be denied. An example value is 
				"granted".
		
				The "authentication_mode" is optional, if omitted the mode will 
				be set to "granted". -->
		<authentication_mode>granted</authentication_mode>
	
	</authsp>
	
	<!--	A-Select IP AuthSP Configuration -->
	<!-- <authsp id='ip'> -->

		<!--	The failure handling parameter specifies whether errors should
				be returned to the A-Select server or handled by the AuthSP 
				itself. If set to "aselect" errors will be handled by the
				A-Select Server.-->
		<!-- <failure_handling>aselect</failure_handling> -->
		
		<!--	The IP ranges on which the user will be checked. If the user its
				IP adress is in at least one alloud range for the accesssed
				application, the user is authenticated.	
				You can define as many IP ranges as you'd like.	-->
		<!-- <ipranges> -->

			<!--
				The "iprange" on which the user will be checked must be
				configured with it's unique "id". The "id" must correspond with
				an iprange configured at the A-Select server. 
				
				The "begin" parameter defines the begin IP adress of the IP 
				range. 				
				The "end" paramater defines the end IP adress of the IP range.

				The begin and end adresses are included in the range.	-->
		<!--	<iprange id="administration" begin="127.0.0.1" end="127.0.0.1"/> -->
		<!-- </ipranges>
	</authsp> -->

	<!--	A-Select LDAP AuthSP Configuration -->
	<!-- <authsp id="ldap">	-->
	
		<!--	The failure handling parameter specifies whether errors should
				be returned to the A-Select server or handled by the AuthSP 
				itself. If set to "aselect" errors will be handled by the
				A-Select Server.-->	
		<!-- <failure_handling>aselect</failure_handling> -->
		
		<!--	The number of false password entries allowed before authentication
				fails and is terminated. -->
		<!-- <allowed_retries>3</allowed_retries> -->
		
		<!--	Define LDAP back-end servers here. -->
		<!--
			In the configuration of the LDAP AuthSP you can define one or 
			more LDAP back-end servers for each realm that you support. For 
			each back-end server a section should be added. The "realm" 
			defines the realm that must be used. The realm must start with 
			'@' like @a-select.org.	-->
		<!-- <back-end_server realm="@domain.com"> -->
			<!--	Defines whether to send the full user id (including realm) to 
					the LDAP back-end or server or to strip the realm and send only 
					the user name. Specify true or false.	-->
			<!-- <full_uid>false</full_uid> -->

			<!--	The full URL to the LDAP back-end server for [realm]. 
					Don't leave a '/' trailing character. -->	
			<!-- <url>ldap://localhost:389</url> -->

			<!--	Defines the transport layer protocol to the LDAP server.
					Specify "simple" or "ssl". -->
			<!-- <method>simple</method> -->
			<!--	Defines the LDAP driver. The 
					com.sun.jndi.ldap.LdapCtxFactory driver is supplied with
					A-Select.	-->
			<!-- <driver>com.sun.jndi.ldap.LdapCtxFactory</driver> -->

			<!--	Defines base DN in the LDAP server. Example:
					"ou=users,ou=aselect,dc=domain,dc=com". -->
			<!-- <base_dn>ou=users,ou=aselect,dc=domain,dc=com</base_dn> -->

			<!--	Defines the DN for the user. Example: "cn". -->
			<!-- <user_dn>cn</user_dn> -->

			<!--	Specifies the DN of the account that you have created for 
					the LDAP AuthSP to fetch user attributes. You can use the
					same account that the A-Select Server uses.	-->
			<!-- <security_principal_dn>CN=aselect administrator,CN=Users,DC=domain,DC=com</security_principal_dn> -->
			<!--	Specifies the password for the LDAP AuthSP account to use.	-->
			<!-- <security_principal_password>changeit</security_principal_password> -->
		<!-- </back-end_server> -->


		<!--	protocol handler settings for LDAP authentication methods -->
	
		<!--	The "simple_protocolhandler" contains the 
				LDAPSimpleProtocolHandler implemention	-->
		<!-- <simple_protocolhandler>org.aselect.authspserver.authsp.ldap.LDAPSimpleProtocolHandler</simple_protocolhandler> -->
		
		<!--	The "ssl_protocolhandler" contains the 
				LDAPSSLProtocolHandler implemention	-->
		<!-- <ssl_protocolhandler>org.aselect.authspserver.authsp.ldap.LDAPSSLProtocolHandler</ssl_protocolhandler> -->
	<!-- </authsp> -->

	<!--	A-Select RADIUS AuthSP Configuration -->

	<!--	The AuthSP "id" is a unique ID for the AuthSP. This ID is configured
			in the web.xml of the AuthSP Server as "config_id" parameter. The
			AuthSP is added to the AuthSP server web.xml during installation. 
			The default configuration ID is "radius".	-->
	<!-- <authsp id="radius"> -->	
		<!--	The failure handling parameter specifies whether errors should
				be returned to the A-Select server or handled by the AuthSP 
				itself. Can be "aselect" to redirect the user back to the 
				A-Select Server in case of an error or local if you want any 
				errors to be displayed by the IP AuthSP.	-->
		<!-- <failure_handling>aselect</failure_handling> -->

		<!--	Defines whether to send the full user id (including realm) to the 
				RADIUS back-end or server or to strip the realm and send only the 
				user name. Specify true or false.	-->
		<!-- <full_uid>false</full_uid> -->

		<!--	The number of false password entries allowed before authentication
				fails and is terminated.	-->
		<!-- <allowed_retries>3</allowed_retries> -->
				
		<!--	Define RADIUS back-end servers here. -->
		<!--	In the configuration of the RADIUS AuthSP you can define one or 
				more RADIUS back-end servers for each realm that you support.
				For each back-end server a section should be added. The "realm" 
				defines the realm that must be used. The realm must start with 
				'@' like @domain.com.	-->
		<!-- <back-end_server realm="@domain.com"> -->
			<!--	
			
			The following configuration items are available:
			
			- host, the hostname of the RADIUS back-end server for [realm]. 
					can be a host name or IP address.
			- port, defines the RADIUS port number e.g. 1812.
			- shared_secret, defines the RADIUS shared secret to be used with this RADIUS 
				back-end server. 
			- method, defines the RADIUS authentication method. Specify pap or chap. -->
			<!-- <host>localhost</host>
			<port>1812</port>
			<shared_secret>changeit</shared_secret>
			<method>pap</method> -->
		<!-- </back-end_server> -->

		<!--	protocol handler settings for RADIUS authentication methods -->
		<!--	Note: DO NOT EDIT -->	

		<!--	The "pap_protocolhandler" contains the 
				RADIUS PAP ProtocolHandler implemention. -->
		<!-- <pap_protocolhandler>org.aselect.authspserver.authsp.radius.RADIUSPAPProtocolHandler</pap_protocolhandler> -->
		<!--	The "chap_protocolhandler" contains the 
				RADIUS CHAP ProtocolHandler implemention. -->
		<!-- <chap_protocolhandler>org.aselect.authspserver.authsp.radius.RADIUSCHAPProtocolHandler</chap_protocolhandler> -->
	<!-- </authsp>	-->


	<!--	A-Select DB AuthSP Configuration -->

	<!--	The AuthSP "id" is a unique ID for the AuthSP. This ID is configured
			in the web.xml of the AuthSP Server as "config_id" parameter. The
			AuthSP is added to the AuthSP server web.xml during installation. 
			The default configuration ID is "db".	-->
	<authsp id="db">
		<!--	The failure handling parameter specifies whether errors should
				be returned to the A-Select server or handled by the AuthSP 
				itself. Can be "aselect" to redirect the user back to the 
				A-Select Server in case of an error or local if you want any 
				errors to be displayed by the IP AuthSP.	-->
		<failure_handling>aselect</failure_handling>

		<!--	The number of false password entries allowed before authentication
				fails and is terminated.	-->
		<allowed_retries>3</allowed_retries>
				
		<!--	The "url" of the database. -->
		<url>jdbc:mysql://localhost/aselect</url>

		<!--	The JDBC driver that is used to communicate with the 
				database.
				NOTE: When configuring a JDBC driver make sure the necessary jar files
				are installed in the appropriate directory. -->
		<driver>com.mysql.jdbc.Driver</driver>

		<!--	The "user" is the user name that has sufficient 
				rights for accessing the database and table. 
				An example username is "aselect_user". -->
		<user>aselect_user</user>

		<!--	The "password" is the password for the above user name.
				An example password is "changeit". -->
		<password>changeit</password>

		<!--    The SQL query for retrieving a row with a password field in it. -->
		<query>SELECT * FROM TBL_DBAUTHSP WHERE userid=?;</query>
		
		<!--    The SQL column name for the password field. -->
		<column>password</column>
		
		<!--    Indicates wether the password is stored in MD5 crypted form -->
		<encrypted>true</encrypted>
	
	</authsp>

	<!-- The "SAM" is the Simple A-Select Manager, which handles the 
		 A-Select AuthSP Server resources. -->
	<sam>

		<!-- The SAM "agent" is the resource group manager. All resources 
			 within A-Select AuthSP Server are defined within in a resource 
			 group. 
			 Note: There must be at least one resourcegroup with one resource 
			 configured. The id's may be configured with value: ""-->
		<agent>

			<!--	A "resourcegroup" contains one or more resources that are of 
					the same type. 
					The "interval" is the interval in seconds at which the 
					different resources within a resource group are polled. 
					An example value for "interval" is "30".

					The "interval" configuration item is optional, if omitted
					the interval will be set to 50 seconds. -->
			<resourcegroup id="" interval="30">

				<!--	A "resource" configuration item can be a JDBC back-end 
						for the session storage manager. 
						The resource "id" is an unique ID for the resource within 
						the resource group. This ID is used in logging if a 
						resource is down.

						The "polling" configuration item indicates the polling 
						method that is to be used to poll this resource.
						The "interval" configuration item is the interval 
						time in seconds at which the resource will be polled.

						An example resource configuration is:
						<resource id="RESOURCE_1" polling="icmp" interval="30">
						
						If the "polling" item and "interval" item are omitted,
						the polling functionality will be disabled for this
						resource. -->
				<resource id="">

					
					
					<!--	A "pollingmethod" is a method that will be used to 	
							poll the resource. 
							
							The "id" configuration item is the unique ID for
							this pollingmethod within the resource. An example value is "icmp".
							
							The "class" item is the implementation that is used 
							of the pollingmethod.
							
							The default A-Select distribution contains two polling methods: 
							- org.aselect.system.sam.agent.polling.SAMICMPPollingMethod
							- org.aselect.system.sam.agent.polling.SAMAPIPollingMethod 
							For the SAMAPIPollingMethod see the A-Select Server 
							documentation.

							The SAMICMPPollingMethod polls the resources by
							using an ICMP PING command to the target system, the 
							SAMAPIPollingMethod polls an A-Select component 
							using the SAM API calls. -->
					<!-- <pollingmethod id="icmp" class="org.aselect.system.sam.agent.polling.SAMICMPPollingMethod">-->

					<!--	The icmp polling command requires a "pingcommand". 
							This ping command will be used to ping the resource 
							system once.
							
							An example ping command on a Windows system is: "ping -n 1" 
							An example ping command on a Linux system is: "ping -c 1" -->
					<!--
						<pingcommand>ping -n 1</pingcommand>
					
					</pollingmethod>
					-->
				</resource>
			</resourcegroup>
			
			<!--	A JDBC resource as needed by the JDBC storage manager
					requires a resource group configuration with:
					- An "id", for example "jdbc_resources"
					- An "interval", for example "30"
					- A resource "id", for example "JDBC_1"
					
					The specific JDBC resource configuration should contain the 
					following:
					- A "driver" specifying the JDBC driver needed to connect 
					with the backend, like "com.mysql.jdbc.Driver".
					- The "url" to the database for example 
					"jdbc:mysql://localhost/aselect".
					- A "username" is used to specify the username that has 
					enough rights to access the JDBC server, for example
					"aselect_user".
					- A "password" The password for the user specified with 
					"username", for example "changeit".-->
			<!-- 
			<resourcegroup id="jdbc_resources" interval="30">
				<resource id="JDBC_1">
					<driver>com.mysql.jdbc.Driver</driver>
					<url>jdbc:mysql://localhost/aselect</url>
					<username>aselect_user</username>
					<password>changeit</password>
				</resource>
			</resourcegroup>
			-->

		</agent>
	</sam>
</xml>
