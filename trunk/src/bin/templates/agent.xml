<xml>
	<!-- A-Select Agent main configuration -->
	<agent>

		<!--	The "serviceport" is the port on which this agent will listen for request.
				An example value is 1495. -->
		<serviceport>1495</serviceport>

		<!--	The "adminport" is the port on which the agent will listen for admin requests.
				An example value is 1946.	-->
		<adminport>1946</adminport>

		<!--	The "server_communication" option specifies the protocol that
				is used to communicate with the A-Select Server.

				Valid "transferprotocol" values are:
					- 'raw' (CGI style),
					- 'soap11' (SOAP 1.1) 
					- 'soap12' (SOAP 1.2). 
						
				The "server_communication" tag is optional, if omitted
				the value will be set to 'raw'. -->
		<server_communication transferprotocol="raw"/>

		<!--	If the "admin_gui" configuration item is set to "true" a graphical 
				user interface will be started containing session and ticket 
				information of the A-Select Agent. 
				
				The "admin_gui" tag is optional, when omitted the value will 
				be set to 'false'. -->
		<admin_gui>false</admin_gui>
	
		<!--	The "truststore" is a keystore containing the A-Select Server's public
				key. 
		
				The "truststore" tag is optional, if omitted the default JVM truststore 
				will be used. -->
		<truststore>[aselect_home]/work/aselectagent/agent.truststore</truststore>

		<!--	The "crypto" configuration contains the configuration items concerning all crypto. 

				NOTE: The A-Select distribution is shipped with the Cryptix provider 
				(cryptix.jce.provider.CryptixCrypto) that supports the 
				SHA1withRSA algorithm for signing, the DESede algorithm for encryption and
				the SHA1PRNG algorithm for random generation.
				
				A-Select has also been tested succesfully with the IBM JCE FIPS provider 
				(com.ibm.crypto.provider.IBMJCA) for more information see www.ibm.com. -->
		<crypto>
		
			<!--	If the "sign_requests" configuration item is set to "true"
					all requests that are sent to the A-Select Server will 
					be signed using the private signing key located in the 
					[working directory]\applications.keystore file. 
			
					The "sign_requests" tag is optional, if omitted the value will be 
					set to "false". -->
			<sign_requests>false</sign_requests>

			<!--	The "application_keystore_password" is the password that is 
					used to read the private signing key from the 
					[working directory]\applications.keystore 
					
					The "applications_keystore_password" tag is optional -->
			<applications_keystore_password>changeit</applications_keystore_password>

			<!--	The "signature_algorithm" is the signature used to sign and verify requests
					during A-Select communication.
					The "algorithm" is the actual algorithm that will be used, for 
					example "SHA1withRSA".
					The "provider" is the corresponding crypto provider "id". See the
					crypto provider documentation for more information on which algorithms
					are supported. 
					
					If no provider is configured, the default provider is used. Usually 
					SUN. However a valid algorithm must be configured. For more information
					see the Java crypto documentation. -->		
			<signature_algorithm algorithm="SHA1withRSA" provider="Cryptix"/>

			<!--	The Cryptographic Service Providers configuration -->
			<providers>

				<!--	A "provider" is a Cryptographic Service Provider (CSP) that implements 
						certain cryptograpic algorithms. These providers are used
						in combination with the "signature_algorithm", "encryption_algorithm" and 
						"random_generator_algorithm" configuration to perform the actual work.

						The "id" must be a unique provider name that can be 
						used in the "*_algorithm" configurations.
						
						The "class" is the provider class of the actual CSP.
						
						The "provider" configuration item is optional. 
						
						NOTE: When configuring a provider make sure the necessary jar files
						are installed in the appropriate directory. -->		
				<!--	The Cryptix provider is shipped with the default A-Select distribution -->										
				<provider id="Cryptix" class="cryptix.jce.provider.CryptixCrypto"/>

			</providers>
		</crypto>

		<!--	The A-Select Agent system logger configuration. 
				The "id" value must contain the value "system". 
				The "target" refers to a corresponding target "id". -->	
		<logging id="system" target='file'>

			<!--	The "level" is the log level that indicates the detail of 
					the A-Select logging.
					
					The following levels can be configured, each level includes
					the logging generated by the lower level, WARNING will log
					WARNING and SEVERE messages:
					- SEVERE:  SEVERE messages indicate problems with A-Select 
						   preventing A-Select from working properly.
					- WARNING: WARNING messages indicate a problem that does not affect
						   A-Select.
					- INFO:    INFO messages contain general A-Select information.
					- CONFIG:  CONFIG messages show information concering the configuration
					           of A-Select. This usually indicates when a default option has
					           been selected. 
					- FINE:    INFO messages contains more extensive logging
					- FINER:   FINER messages contain maximum logging, without stacktraces
					- FINEST:  FINEST messages maximum logging with stacktraces
					- ALL:     equal to FINEST	
					
					The "level" configuration item is optional, by defaul the level will be 
					set to CONFIG. -->	
			<level>CONFIG</level>

			<!--	The target "id" identifies this target configuration and 
					must be an unique name that corresponds with the configured 
					"target" attribute of the logging tag. -->
			<target id='file'>

				<!--	The "max_file_size" indicates the maximum log file size 
						in bytes for one log file. An example is "524288" that 
						corresponds to a 512Kb log file.
						
						The "max_file_size" configuration item is optional, if 
						omitted the value will be set to "307200" that indicates
						a filesize of 300Kb. -->
				<max_file_size>524288</max_file_size>
				
				<!--	The "nr_of_files" indicates the number of files that 
						will be used when rotating the log files. If the log file 
						becomes larger than the configured "max_file_size" a new 
						file is created. This process will repeat the 
						configured until the number of files is reached.
						
						The "nr_of_files" configuration item is optional, if 
						omitted the value will be set to "4". -->
				<nr_of_files>4</nr_of_files>
			
				
				<!--	The target "directory" is the directory where the 	
						logging files will be written. The system logging files are 
						written in a subdirectory "system".

						The "directory" configuration item is optional, if 
						omitted the directory will be the:
						"A-Select working directory"\log\system. -->
				<directory>[aselect_home]/log/aselectagent</directory>

			</target>
		</logging>
		
		<!-- Authorization. 
		     This section is used to control the authorization engine of the agent.
		     Authorization policies are defined per application ("app_id"). 
		     A policy contains one "rules" section in which the different authorization rules for the
		     application are defined.
		     A "rule" must contain one conditions ("condition") which will be used to determine
		     if a user is authorized or not. An optional "target" can be set that is used to define
		     an extra parameter that this rule applies to, for example "*.pdf".
		     
		     If all conditions are met the user will be authorized.
		     
		     Examples of conditions are:

		     This will authorize user that are accessing the application from localhost:
		     
		     <rule id="rule1">
                     	<condition>ip=127.0.0.1</condition>
                     </rule>
		     	     
		     This will authorize user that are accessing the application from localhost, but only for 
		     all the pdf files located in the root of the application:
		     
		     <rule id="rule1">
                        <target>*.pdf</target>
                     	<condition>ip=127.0.0.1</condition>
                     </rule>
		     
		     This will authorize all users with a user id conform "*@domain.com" that are accessing 
		     the application.
		     
		     <rule id="rule1">
                     	<condition>uid =w '*@domain.com'</condition>
                     </rule>
		     -->
		     
		<!-- 
		<authorization>
		     <policies>         
                        <policy app_id="app1">
                            <rules>
                                <rule id="rule1">
                                    <target>index.html</target>
                                    <condition>ip=127.0.0.1</condition>
                                </rule>
                            </rules>
                        </policy>
			</policies>
		</authorization>
		-->

	</agent>
	
	<!--	Storage Managers store information items in key=value pairs. Storage Managers 
			also manage the expiration time, cleanup of old information and the maximum 
			number of information items that can be stored.
	
		The A-Select Agent requires the following Storage Managers
			- A Session Storage Manager used to store A-Select Agent Sessions.
			- A Ticket Storage Manager used to store A-Select Agent Ticket. -->
			
	<!-- The Session Storage Manager.-->
	<storagemanager id="session">

		<!--	The "expire" configuration item indicates the expiration time in seconds. 

				The "expire" configuration item is optional, if omitted the
				value will be set to "0" indicating information stored with this  
				storage manager does not expire. -->
		<expire>600</expire>

		<!--	The "interval" configuration item indicates the time in seconds that a storage 
				manager checks for expired information.
				
				The "interval" configuration item is optional, if omitted the
				value will be set to "60" indicating an interval of 1 minute. 
				-->
		<interval>10</interval>

		<!--	The "max" configuration item indicates the maximum of number of information
				items that may exist in this storage manager. -->
		<max>1000</max>

		<!--	The "handler" configuration item of a Storage Manager is the type of storage 
				that will be used to store the sessions in. 
		
				The "class" is the class that contains the Storage Handler implemenation. 
				
				The current A-Select distribution contains two implementations:
				- org.aselect.system.storagemanager.handler.MemoryStorageHandler
				- org.aselect.system.storagemanager.handler.JDBCStorageHandler
			
				The "id" refers to the "storagehandler" configuration item containing
				the specific configuration. An example value is "memory". 
				
				An example handler configuration for usage of the JDBStorageHandler is:
				<handler class="org.aselect.system.storagemanager.handler.JDBCStorageHandler" id="jdbc"/> -->
		<handler class="org.aselect.system.storagemanager.handler.MemoryStorageHandler" id="memory"/>
		
		<!--	The "storagehandler" handles the communication to the actual storage medium. 
				The "id" of the storagehandler is the unique name used in combination
				with the "handler" configuration item to initialize a Storage Handler.
				
				An example value is "memory". 
				
				NOTE: The memory handler does not need any additional configuration.-->
		<storagehandler id="memory"/>

		<!--	If in the "handler" configuration the "class" is configured to
				"org.aselect.system.storagemanager.handler.JDBCStorageHandler" 
				the storagehandler requires additional configuration.
				
				The "id" of the storagehandler is the unique storagehandler name 
				within this storagemanager. 
				
				The "resourcegroup" is the group of resources that is to be used 
				to connect with the physical storage.

				An example value for "id" is "jdbc" and an example value for 
				"resourcegroup" is "jdbc_resources". -->
		<!-- <storagehandler id="jdbc" resourcegroup="jdbc_resources"> -->

			<!--	The "table" configuration item is the actual table used to store 
				and retrieve information.
					
				The "name" configuration item is the name of the table that 
				exists in the JDBC storage.
					
				An example "name" is "TBL_SERVER_SESSIONS". 
				
				NOTE: The following shows the required table structure in a MYSQL 
					database:
						CREATE TABLE TBL_SERVER_SESSIONS 
						( 
						  hash varchar(20),    
						  timestamp timestamp(14),    
						  s_key blob,    
						  s_value blob
						) PRIMARYKEY(hash); -->
			<!-- <table name="TBL_SERVER_SESSIONS"> -->
				
				<!--	The "hash" configuration item indicates the column in 
						the database table that is used for storing the 
						identification hash of the item.

						An example "hash" column name is "hash". -->
				<!-- <hash>hash</hash> -->
				
				<!--	The "timestamp" configuration item indicates the column 
						in the database table that is used to store the 
						timestamp of the item. This timestamp is used 
						to validate the expiration time.

						An example "timestamp" column name is "timestamp". -->
				<!-- <timestamp>timestamp</timestamp> -->

				<!--	The "key" configuration item indicates the column 
						in the database table that is used for storing the 
						key of the item. 
						
						An example "key" column name is "s_key". -->
				<!-- <key>s_key</key> -->
				
				<!--	The "value" configuration item indicates the column 
						in the database table that is used for storing the 
						actual item.

						An example "value" column name is "s_value". -->
				<!-- <value>s_value</value> -->

			<!-- </table> -->
		<!-- </storagehandler> -->
	</storagemanager>

	<!-- The Ticket Storage Manager.-->
	<storagemanager id="ticket">

		<expire>600</expire>
		
		<interval>10</interval>

		<max>1000</max>

		<handler class="org.aselect.system.storagemanager.handler.MemoryStorageHandler" id="memory"/>

		<storagehandler id="memory"/>

	</storagemanager>
	
	<!--	The "SAM" is the Simple A-Select Manager which handles all A-Select resources. -->
	<sam>

		<!--	The SAM "agent" is the resource group manager. All resources 
				within A-Select Server are defined within in a resource group. -->
		<agent>

			<!--	A "resourcegroup" contains one or more resources that are of 
					the same type, like one or more mysql databases containing
					the same tables or one or more A-Select Servers. 
					The A-Select Agent needs one resourcegroup configured with 
					"aselectserver" as the value of the "id" configuration item. 
					The "id" is the unique resourcegroup name within the SAM 
					agent configuration.
					The "interval" is the interval in seconds at which the 
					different resources within a resource group are polled. 
					An example value for "interval" is "30".

					The "interval" configuration item is optional, if omitted
					the interval will be set to 50 seconds. -->
			<resourcegroup id="aselectserver" interval="30">

				<!--	A configured "resource" is an A-Select Agent resource, 	
						like an A-Select Server or database. 
						A resource "id" is an unique ID for the resource within 
						the resource group. This ID will for example be used in 
						logging if a resource is down. An example value is 
						"ASELECTSERVER_1".

						The "polling" configuration item indicates the polling 
						method that is to be used to poll this resource.
						The "interval" configuration item is the interval 
						time in seconds at which the resource will be polled.

						An example resource configuration is:
						
						<resource id="ASELECTSERVER_1" polling="sam" interval="30">
						
						If the "polling" item and "interval" item are omitted,
						the polling functionality will be disabled for this
						resource. -->
				<resource id="ASELECTSERVER_1">

					<!--	The "aselect-server-id" is the id of the A-Select 	
							Server which this A-Select Agent will use. -->
					<aselect-server-id>default.aselect.org</aselect-server-id>

					<!--	The "url" is the URL to the A-Select Server. -->
					<url>https://localhost/aselectserver/server</url>

					<!--	A "pollingmethod" is a method that will be used to 	
							poll the resource. 
							
							The "id" configuration item is the unique ID for
							this pollingmethod within the resource. An example value is "icmp".
							
							The "class" item is the implementation that is used 
							of the pollingmethod.
							
							The default A-Select distribution contains two polling methods: 
							- org.aselect.system.sam.agent.polling.SAMICMPPollingMethod
							- org.aselect.system.sam.agent.polling.SAMAPIPollingMethod

							The SAMICMPPollingMethod polls the resources by
							using an ICMP PING command to the target system, the 
							SAMAPIPollingMethod polls an A-Select component 
							using the SAM API calls. -->						
					<!--
					<pollingmethod id="icmp" class="org.aselect.system.sam.agent.polling.SAMICMPPollingMethod">
					-->

					<!--	The icmp polling command requires a "pingcommand". 
							This ping command will be used to ping the resource 
							system once.
							
							An example ping command on a Windows system is: "ping -n 1" 
							An example ping command on a Linux system is: "ping -c 1" -->
					<!--
						<pingcommand>ping -n 1</pingcommand>
					
					</pollingmethod>
					-->

					<!--	The SAMAPIPollingMethod uses the SAM protocol to determine if a resource is down 
					
							- The "transferprotocol" is the transferprotocol that will be used to 
								communicate with the sam service.
								
							The transferprotocol is optional, if omitted the 
							value will be set to "raw". -->
					<!--
					<pollingmethod id="sam" class="org.aselect.system.sam.agent.polling.SAMAPIPollingMethod" 
					transferprotocol="raw">
					-->

					<!--	The "url" is the unified resource locator which 
							points to the SAM Service servlet.
							For example https://localhost/aselectserver/sam 
							-->
					<!--
						<url>https://localhost/aselectserver/sam</url>
					</pollingmethod>
					-->
				</resource>
			</resourcegroup>

			<!--	This is an example of a resource group containing resources
					that can be accessed by JDBC. The SAMICMPPollingMethod 
					described in the previous resourcegroup can also be 
					configured for this resource.-->
			<!--
			<resourcegroup id="jdbc_resources" interval="50">
				<resource id="MYSQL_1">
			-->
					<!--	The JDBC driver that is used to communicate with the 
							database. This driver must be made accessable for 
							the A-Select Agent. -->
					<!--
					<driver>com.mysql.jdbc.Driver</driver>
					-->
					
					<!--	The "url" that contians points to the database 		
							table. An example that can be used with an MySQL 
							database is: "jdbc:mysql://localhost/aselect".  -->
					<!--
					<url>jdbc:mysql://localhost/aselect</url>
					-->

					<!--	The "username" is the user name that has sufficient 
							rights for accessing the database table. -->
					<!--
					<username>aselect_user</username>
					-->

					<!--	The "password" is the password for the user name 
							that has sufficient rights for accessing and 
							editing the database table. -->
					<!--
					<password>changeit</password>
					-->
			<!--
				</resource>
			</resourcegroup>
			-->
		</agent>
	</sam>
</xml>
